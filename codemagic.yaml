workflows:
  ios-build:
    name: iOS Build
    instance_type: mac_mini_m1
    max_build_duration: 60

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true

    environment:
      # Используем automatic signing
      vars:
        TEAM_ID: 7LSL6C96XJ
        BUNDLE_ID: com.Workapp.SweetHome
      xcode: latest
      

    integrations:
      app_store_connect: "Manniste Kaisa"  # имя интеграции из Codemagic UI

    scripts:
      - name: Check signing setup
        script: |
          # Проверяем доступные сертификаты
          echo "=== Available certificates ==="
          security find-identity -v -p codesigning
          
          # Проверяем App Store Connect интеграцию
          echo "=== App Store Connect status ==="
          app-store-connect get-latest-app-store-build-number "com.Workapp.SweetHome" || echo "App not found in App Store Connect"

      - name: Install signing files from Codemagic UI
        script: |
          set -e
          echo "=== Installing signing assets from Codemagic UI ==="
          keychain add-certificates
          
          echo "=== Verifying provisioning profiles are available ==="
          ls -lR ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build and export iOS app
        script: |
          set -e
          cd SweetHome

          # --- 1. Archive ---
          echo "=== Archiving the project ==="
          xcodebuild \
            -project "SweetTown.xcodeproj" \
            -scheme "SweetTown" \
            -configuration "Release" \
            -destination "generic/platform=iOS" \
            -archivePath "build/SweetTown.xcarchive" \
            CODE_SIGN_STYLE=Automatic \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            archive

          # --- 2. Find Provisioning Profile ---
          echo "=== Searching for App Store provisioning profile ==="
          PROVISIONING_PROFILE_PATH=""
          
          find ~/Library/MobileDevice/Provisioning\ Profiles/ -name "*.mobileprovision" | while read profile; do
              PROFILE_BUNDLE_ID=$(/usr/libexec/PlistBuddy -c 'Print :Entitlements:application-identifier' /dev/stdin <<< $(security cms -D -i "$profile"))
              PROFILE_BUNDLE_ID="${PROFILE_BUNDLE_ID#*.}" # Remove team id prefix

              # Check if it's a distribution profile (no devices) and the bundle ID matches
              if ! /usr/libexec/PlistBuddy -c 'Print :ProvisionedDevices' /dev/stdin <<< $(security cms -D -i "$profile") >/dev/null 2>&1; then
                  if [ "$PROFILE_BUNDLE_ID" == "$BUNDLE_ID" ]; then
                      PROVISIONING_PROFILE_PATH="$profile"
                      break
                  fi
              fi
          done

          if [ -z "$PROVISIONING_PROFILE_PATH" ]; then
              echo "FATAL: App Store provisioning profile for $BUNDLE_ID not found after search."
              exit 1
          fi
          
          echo "Found App Store profile at path: $PROVISIONING_PROFILE_PATH"
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i "$PROVISIONING_PROFILE_PATH"))
          echo "Found App Store profile with UUID: $PROFILE_UUID"

          # --- 3. Create exportOptions.plist ---
          echo "=== Creating exportOptions.plist ==="
          cat > "build/exportOptions.plist" <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>$TEAM_ID</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>provisioningProfiles</key>
              <dict>
                  <key>$BUNDLE_ID</key>
                  <string>$PROFILE_UUID</string>
              </dict>
          </dict>
          </plist>
          EOF

          # --- 4. Export IPA ---
          echo "=== Exporting IPA ==="
          xcodebuild \
            -exportArchive \
            -archivePath "build/SweetTown.xcarchive" \
            -exportPath "build/ios/ipa" \
            -exportOptionsPlist "build/exportOptions.plist"
          
          echo "✅ IPA file created successfully"

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - /tmp/xcodebuild_archive/*.xcarchive

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        # Закомментируйте submit_to_app_store пока не готовы к релизу
        # submit_to_app_store: true
